# coding: utf-8

# flake8: noqa

"""
    broker_view_generative_ui

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# import apis into sdk package
from typing import Callable, Dict
from broker_view_generative_ui_async_sdk.api.default_api import DefaultApi

# import ApiClient
from broker_view_generative_ui_async_sdk.api_response import ApiResponse
from broker_view_generative_ui_async_sdk.api_client import ApiClient
from broker_view_generative_ui_async_sdk.configuration import Configuration
from broker_view_generative_ui_async_sdk.exceptions import OpenApiException
from broker_view_generative_ui_async_sdk.exceptions import ApiTypeError
from broker_view_generative_ui_async_sdk.exceptions import ApiValueError
from broker_view_generative_ui_async_sdk.exceptions import ApiKeyError
from broker_view_generative_ui_async_sdk.exceptions import ApiAttributeError
from broker_view_generative_ui_async_sdk.exceptions import ApiException

# import models into sdk package

def init_api(api, host: str=None, header_generator: Dict[str, Callable[[], str]]=None, header_gen_err_as_warning: bool = True):
    """Utility constructor.
    :param api: class api to initialize.
    :param host: str literal.
    :param header_generator: dict of key=header_field_name, value=callable that would be called on each request to generate value for the header field name.
    :param header_gen_err_as_warning: boolean indicating whether to throw an exception or log a warning in the header_generator.

    """
    config = Configuration()
    if host:
        config.host = host
    _header_generator = header_generator or {}
    _header_generator.update({
        'x-atbay-source-app-name': _get_source_name,
        'x-atbay-request-sent-time': _get_request_sent_ms,
    })        
    api_instance = api(ApiClient(configuration=config, header_generator=_header_generator, header_gen_err_as_warning=header_gen_err_as_warning))
    return api_instance

async def _get_source_name():
    import os
    return os.getenv('APP_NAME', '-')

async def _get_request_sent_ms():
    from time import time_ns
    return str(time_ns())
